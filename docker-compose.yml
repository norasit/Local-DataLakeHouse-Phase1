version: "3.9"

services:
  postgres:
    image: postgres:15
    hostname: postgres
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: metastore_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d metastore_db"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [trino-network]

  hive-metastore:
    image: apache/hive:standalone-metastore-4.1.0
    hostname: hive-metastore
    ports: ["9083:9083"]

    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres

      # ให้ Hive/Hadoop ในคอนเทนเนอร์อ่านไฟล์คอนฟิกที่เราเมานท์
      HIVE_CONF_DIR: /opt/hive/conf
      HADOOP_CONF_DIR: /opt/hive/conf

      # Fallback ให้ AWS SDK มองเห็นคีย์แน่ ๆ (ช่วยเคสที่ core-site ไม่ถูกโหลด)
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test12334567
      AWS_REGION: us-east-1
      AWS_EC2_METADATA_DISABLED: "true"

      # ให้ HMS เห็น JAR สำหรับ S3A + Postgres ครบ
      HIVE_AUX_JARS_PATH: /opt/hive/lib/postgres.jar:/opt/hive/lib/hadoop-aws.jar:/opt/hive/lib/aws-sdk-bundle.jar
      HADOOP_CLASSPATH:   /opt/hive/lib/hadoop-aws.jar:/opt/hive/lib/aws-sdk-bundle.jar
      METASTORE_AUX_JARS_PATH: /opt/hive/lib/hadoop-aws.jar:/opt/hive/lib/aws-sdk-bundle.jar

    volumes:
      - ./metastore_conf/metastore-site.xml:/opt/hive/conf/metastore-site.xml:ro
      - ./metastore_conf/core-site.xml:/opt/hive/conf/core-site.xml:ro
      # เมานท์ซ้ำเข้า path มาตรฐานของ Hadoop ด้วย (กันกรณี Hive ไม่มอง HADOOP_CONF_DIR)
      - ./metastore_conf/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml:ro

      - ./jars/postgresql-42.7.3.jar:/opt/hive/lib/postgres.jar:ro
      - ./jars/hadoop-aws.jar:/opt/hive/lib/hadoop-aws.jar:ro
      - ./jars/aws-sdk-bundle.jar:/opt/hive/lib/aws-sdk-bundle.jar:ro

    # init/upgrade schema (idempotent) แล้วค่อยเปิด thrift metastore
    command: >
      bash -lc "schematool -dbType postgres -initOrUpgradeSchema || true &&
                /opt/hive/bin/hive --service metastore"

    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'exec 3<>/dev/tcp/127.0.0.1/9083'"]
      interval: 5s
      timeout: 3s
      retries: 40

    depends_on:
      postgres:
        condition: service_healthy
      # ไม่ต้องรอ ready แค่ให้ MinIO start ก่อนพอ
      minio:
        condition: service_started

    networks: [trino-network]

  minio:
    image: minio/minio:RELEASE.2025-07-18T21-56-31Z
    hostname: minio
    ports: ["9000:9000","9001:9001"]
    volumes:
      - ./minio-data:/data
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: test12334567
    command: server /data --console-address ":9001"
    networks: [trino-network]

  minio-mc:
    image: minio/mc:RELEASE.2025-07-21T05-28-08Z
    depends_on:
      minio:
        condition: service_started
    restart: on-failure
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: test12334567
    entrypoint: >
      /bin/sh -eu -c '
        until mc alias set localminio http://minio:9000 "$${MINIO_ROOT_USER}" "$${MINIO_ROOT_PASSWORD}"; do
          echo "waiting for MinIO..."; sleep 2;
        done
        mc mb -p localminio/lakehouse-data || true
        for p in warehouse raw; do
          mc stat localminio/lakehouse-data/$${p} >/dev/null 2>&1 || \
            echo "" | mc pipe localminio/lakehouse-data/$${p}/.keep
        done
        echo "Bucket + prefixes ready: lakehouse-data/{warehouse,raw}"
      '
    networks: [trino-network]

  trino:
    image: trinodb/trino:476
    hostname: trino_container
    ports: ["8080:8080"]
    volumes:
      - ./trino/catalog:/etc/trino/catalog
      - ./trino/etc/jvm.config:/etc/trino/jvm.config:ro
    depends_on:
      hive-metastore:
        condition: service_healthy
      minio:
        condition: service_started
    networks: [trino-network]

networks:
  trino-network:
    driver: bridge
